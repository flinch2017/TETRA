<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title><%= artist.name %> | TETRA</title>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.5.0/css/all.min.css" />
<style>
  body {
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #0a0f2c;
    color: white;
  }

  .fixed-header {
    position: fixed;
    top: 0; left: 0; width: 100%;
    z-index: 10000;
    background-color: #050a1f;
  }

  .artist-header {
    position: relative;
    background-size: cover;
    background-position: center;
    height: 300px;
    display: flex;
    align-items: flex-end;
    padding: 2rem;
    
    overflow: visible;
  }

  .overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to top, rgba(10, 15, 44, 0.9), rgba(10, 15, 44, 0));
    z-index: 1;
  }

 

  .artist-dropdown {
  position: relative;
}

.artist-dropdown-toggle {
  cursor: pointer;
  color: white;
  font-size: 1.5rem;
}

.artist-dropdown-menu {
  display: none;
  position: absolute;
  top: 120%;
  left: 0;  /* align directly below the ellipsis icon */
  background-color: #12193a;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0,0,0,0.3);
  min-width: 160px;
  z-index: 999999;
}


.artist-dropdown-menu a {
  display: block;
  padding: 0.75rem 1rem;
  color: rgba(255, 255, 255, 0.9);
  text-decoration: none;
  font-size: 0.9rem;
}

.artist-dropdown-menu a:hover {
  background-color: rgba(255, 255, 255, 0.1);
}


  .artist-info {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .artist-name {
    font-size: 2.5rem;
    font-weight: bold;
  }

  .artist-follow {
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.7);
  }

  .header-actions {
  display: flex;
  align-items: center;
  gap: 1rem;  /* ‚Üê increased gap */
  margin-top: 1rem;
}


  .follow-btn {
  padding: 0.5rem 1rem;
  border-radius: 999px;
  background-color: #007bff; /* vibrant blue */
  color: white;
  border: none;
  cursor: pointer;
  font-size: 0.95rem;
  box-shadow: 0 0 8px rgba(0, 123, 255, 0.6), 0 0 16px rgba(0, 123, 255, 0.4);
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.follow-btn:hover {
  box-shadow: 0 0 12px rgba(0, 123, 255, 0.8), 0 0 24px rgba(0, 123, 255, 0.5);
  transform: translateY(-1px);
}


  .section {
    padding: 2rem;
    max-width: 1000px;
    margin: 0 auto;
    margin-bottom: 20px;
  }

  .section h2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .song-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  }

  .song-item.no-border {
    border: none;
  }

  .song-info {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .song-info img {
    width: 50px;
    height: 50px;
    border-radius: 6px;
    object-fit: cover;
  }

  .song-title {
    font-weight: 500;
  }

  .song-actions i {
    margin-left: 1rem;
    cursor: pointer;
    color: rgba(255, 255, 255, 0.8);
  }

  .song-actions i:hover {
    color: #1db954;
  }

  .artist-details {
    font-size: 0.95rem;
    color: rgba(255, 255, 255, 0.75);
    line-height: 1.6;
  }

  .releases-wrapper {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
  }

  

  .release-meta {
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.6);
  }

  @media screen and (max-width: 600px) {
    .artist-name {
      font-size: 2rem;
    }

    .section {
      padding: 1rem;
    }

    .song-info img {
      width: 40px;
      height: 40px;
    }
  }

  .artist-rank {
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 48px;
  height: 48px;
  background-color: rgba(18, 25, 58, 0.8);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.85rem;
  color: rgba(255, 255, 255, 0.9);
  font-weight: bold;
  z-index: 2;
}

.artist-profile {
  padding-bottom: 80px; /* space so content isn't hidden under music bar */
}

.setup-artist-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
  margin-top: 2rem;
}

.setup-artist-btn {
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  border-radius: 999px;
  background-color: #007bff; /* vibrant blue */
  color: white;
  border: none;
  cursor: pointer;
  text-decoration: none; /* remove underline */
  box-shadow: 0 0 10px rgba(0, 123, 255, 0.6), 0 0 20px rgba(0, 123, 255, 0.4);
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.setup-artist-btn:hover {
  box-shadow: 0 0 15px rgba(0, 123, 255, 0.8), 0 0 30px rgba(0, 123, 255, 0.5);
  transform: translateY(-2px);
}

  .releases-grid {
    display: flex;
    gap: 20px;
    overflow-x: auto;
    padding-bottom: 10px;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .releases-grid::-webkit-scrollbar {
    display: none;
  }

  .release-card-link {
    flex: 0 0 180px;
    text-decoration: none;
    color: inherit;
  }

  .release-card {
    position: relative;
    scroll-snap-align: start;
    background-color: #1c1c1c;
    border-radius: 16px;
    overflow: hidden;
    /* Removed hover scaling and transition */
  }

  /* No .release-card:hover at all */

  .release-cover {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    border-radius: 12px;
    box-shadow: 0 0 6px rgba(0,0,0,0.3);
  }

  .release-details {
    padding: 10px 8px;
    text-align: left;
  }

  .release-title-with-badge {
    display: flex;
    align-items: center;
    gap: 6px;
    margin-bottom: 5px;
  }

  .release-title {
    font-size: 1rem;
    font-weight: bold;
    color: white;
  }

  .explicit-e-badge {
    background-color: crimson;
    color: white;
    font-size: 0.65rem;
    padding: 2px 5px;
    border-radius: 4px;
    font-weight: bold;
    text-transform: uppercase;
    line-height: 1;
  }

  .release-meta {
    font-size: 0.8rem;
    color: rgba(255, 255, 255, 0.6);
    margin-bottom: 8px;
  }

  .release-card-link:hover,
.release-card-link:hover * {
  text-decoration: none;
  color: inherit;
  transform: none !important;
  box-shadow: none !important;
}

.clickable-song {
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.clickable-song:hover {
  background-color: rgba(255, 255, 255, 0.05);
}


</style>
</head>
<body>

<div class="fixed-header">
  <%- include('partials/console_header') %>
</div>

<div class="artist-header" style="background-image: url('<%= artist.bannerUrl %>')">
  <div class="overlay"></div>
  <% if (artist.rank && artist.rank <= 500) { %>
  <div class="artist-rank">
    #<%= artist.rank %>
  </div>
<% } %>


  <div class="artist-info">
    <div class="artist-name"><%= artist.name %></div>
    <div class="artist-follow"><%= artist.followers %> followers</div>
    <div class="header-actions">
      <button 
  class="follow-btn" 
  data-target="<%= artist.acode %>" 
  data-following="<%= isFollowing ? 'true' : 'false' %>">
  <%= isFollowing ? 'Following' : 'Follow' %>
</button>




      <div class="artist-dropdown">
        <i class="fas fa-ellipsis-v artist-dropdown-toggle"></i>
        <div class="artist-dropdown-menu">
          <% if (isOwnProfile) { %>
  <a href="/edit-profile?acode=<%= artist.acode %>">Edit Profile</a>
<% } %>

          <a href="#">Add to Favorites</a>
          <a href="#">Report</a>
          <a href="#">Block Artist</a>
        </div>
      </div>
    </div>
  </div>
</div>



<% if (isOwnProfile && (!artist.account_mode || artist.account_mode === 'regular')) { %>
  <div class="setup-artist-container">
    <a href="/edit-profile?acode=<%= artist.acode %>" class="setup-artist-btn">Setup Artist Profile</a>
  </div>
<% } %>



<main class="artist-profile">
  <div class="section">
  <h2>Popular Songs</h2>
  <% if (artist.songs && artist.songs.length > 0) { %>
    <% artist.songs.forEach(song => { %>
      <div class="song-item clickable-song" data-song-id="<%= song.id %>">
        <div class="song-info">
          <img src="<%= song.coverUrl %>" alt="Cover">
          <div>
            <div class="song-title"><%= song.title %></div>
            <div class="release-meta"><%= song.streams %> streams</div>
          </div>
        </div>
        <div class="song-actions">
          <i class="fas fa-heart"></i>
          <i class="fas fa-ellipsis-v"></i>
        </div>
      </div>
    <% }) %>
  <% } else { %>
    <p style="color: rgba(255,255,255,0.6); font-size:0.95rem;">No available songs</p>
  <% } %>
</div>


  <div class="section">
  <h2>Latest Albums</h2>
  <% if (artist.releases && artist.releases.length > 0) { %>
    <div class="releases-grid">
      <% artist.releases.forEach(release => { %>
        <a href="/album/<%= release.id %>" class="release-card-link">
          <div class="release-card">
            <img class="release-cover" src="<%= release.coverUrl %>" alt="<%= release.title %>">
            <div class="release-details">
              <div class="release-title-with-badge">
                <span class="release-title"><%= release.title %></span>
                <% if (release.explicit === 'Yes') { %>
                  <span class="explicit-e-badge">E</span>
                <% } %>
              </div>
              <% if (release.releasedOn) { %>
                <div class="release-meta">Released on <%= release.releasedOn %></div>
              <% } %>
            </div>
          </div>
        </a>
      <% }) %>
    </div>
  <% } else { %>
    <p style="color: rgba(255,255,255,0.6); font-size:0.95rem;">No available albums</p>
  <% } %>
</div>












  <div class="section">
    <h2>About</h2>
    <% if (artist.bio) { %>
      <div class="artist-details">
        <%= artist.bio %>
      </div>
    <% } %>
  </div>
</main>



<div class="fixed-bar">
  <%- include('partials/music_bar') %>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.artist-dropdown-toggle').forEach(toggle => {
    toggle.addEventListener('click', (e) => {
      e.stopPropagation();
      const menu = toggle.nextElementSibling;
      menu.style.display = (menu.style.display === 'block') ? 'none' : 'block';
    });
  });
  document.addEventListener('click', () => {
    document.querySelectorAll('.artist-dropdown-menu').forEach(menu => {
      menu.style.display = 'none';
    });
  });
});

</script>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const followBtn = document.querySelector('.follow-btn');
  if (followBtn) {
    followBtn.addEventListener('click', async () => {
      const targetAcode = followBtn.getAttribute('data-target');
      const isFollowing = followBtn.getAttribute('data-following') === 'true';

      try {
        const url = isFollowing ? '/unfollow' : '/follow';
        const res = await fetch(url, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ targetAcode })
        });
        const data = await res.json();

        if (data.success) {
          followBtn.textContent = isFollowing ? 'Follow' : 'Following';
          followBtn.setAttribute('data-following', isFollowing ? 'false' : 'true');

          // Optional: update follower count
          const followerCountElem = document.querySelector('.artist-follow');
          if (followerCountElem) {
            let count = parseInt(followerCountElem.textContent) || 0;
            count = isFollowing ? count - 1 : count + 1;
            followerCountElem.textContent = `${count} followers`;
          }
        } else {
          alert(data.message || 'Action failed');
        }
      } catch (err) {
        console.error('Follow/unfollow failed:', err);
        alert('An error occurred');
      }
    });
  }
});
</script>



</body>
</html>
